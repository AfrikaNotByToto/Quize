const chalk = require('chalk');
const rl = require('readline-sync');
const Controller = require('./Controller');
const Model = require('./Model');

class View {
  viewMenu(data) {
    let arr = data;
    let path = `./topics/${
      arr[arr.length - 1]
    }`;
    const n = rl.question(`
     –í—ã–±–µ—Ä–∏ —Ç–µ–º—É:
     1 
     2 
     3 –ö–∞–∫–æ–µ —Ç—ã –º–æ—Ä–æ–∂–µ–Ω–æ–µ?
     
     `);
    if (n === 1) path = `./topics/${arr[n]}`;
    if (n === 2) path = `./topics/${arr[n]}`;
    if (n === 3) path = `./topics/${arr[n]}`;
    return path;
  }

  viewQuest(data) {
    const arr = data.split('\n').filter((el) => el !== '');
    const obj = {};
    for (let i = 0; i < arr.length; i += 2) {
      obj[arr[i]] = arr[i + 1];
    }

    return obj;
  }

  async game(viewQuestions) {
    let obj = viewQuestions;

    for (let key in obj) {
      let question = rl.question(`
       ${key}
       –¢–≤–æ–π –æ—Ç–≤–µ—Ç: `);
      if (question === obj[key]) {
        console.log(`\n       –¢–æ—á–Ω–æ ü§©`);
      } else {
        console.log(`\n       –ê –≤–æ—Ç –∏ –Ω–µ—Ç, –ø—Ä–∞–≤–∏–ª—å–Ω–æ: ` + obj[key]);
      }
    }
  }

  async intro() {
    console.clear();
    rl.question(`                     –ü–æ–∏–≥—Ä–∞–µ–º?`);
  }

  async outro() {
    setTimeout(() => {
      const model = new Model();
      const view = new View();
      const controller = new Controller(model, view);
      const again = rl.question(`      –ü–æ–≤—Ç–æ—Ä–∏–º? üîÅ
       –ù–∞–∂–º–∏ 1, –µ—Å–ª–∏ —Å–æ–≥–ª–∞—Å–µ–Ωüòâ
         
       `);
      if (again === 1) {
        console.clear();
        controller.run();
      }
    }, 2000);
  }
}

// const readlineSync = require('readline-sync');

// class View {
//   renderSelectTopicPage(themes) {
//     // –Ω–∞–º –ø—Ä–∏—à—ë–ª —Å–ø–∏—Å–æ–∫ —Ç–µ–º, –Ω—É–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏ –∏—Ö –Ω–∞ —ç–∫—Ä–∞–Ω
//     // –∑–¥–µ—Å—å —Ç–≤–æ–π –∫–æ–¥...

//     // –∑–∞—Ç–µ–º –¥–∞—ë–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—ã–±—Ä–∞—Ç—å —Ç–µ–º—É
//     const topic = readlineSync.question('–í–≤–µ–¥–∏—Ç–µ —Ç–µ–º—É: ');

//     // –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—É –≤—ã–±—Ä–∞–Ω–Ω—É—é —Ç–µ–º—É
//     return topic;
//   }
// }

module.exports = View;
