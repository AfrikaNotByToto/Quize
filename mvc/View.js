const chalk = require('chalk');
const { arch } = require('os');
const rl = require('readline-sync');
const Controller = require('./Controller');
const Model = require('./Model');

class View {
  viewMenu(data) {
    let arr = data;
    let path = `./topics/${
      arr[Math.floor(Math.random() * (arr.length - 1 - 0) + 0)]
    }`;
    const n = rl.question(`
     1 –¢–µ—Å—Ç –Ω–∞ –∑–Ω–∞–Ω–∏–µ —Å–µ–±—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ –∏ –±–µ–∑ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.
     2 –ö—Ç–æ –∂–µ —Ç—ã —Ç–∞–∫–æ–π?
     3 –•–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –ø—Ä–æ —Å–µ–±—è –±–æ–ª—å—à–µ?

     `);
    console.clear();
    if (n === 1) path = `./topics/${arr[n]}`;
    if (n === 2) path = `./topics/${arr[n]}`;
    if (n === 3) path = `./topics/${arr[n]}`;
    return path;
  }

  viewQuest(data) {
    const arr = data.split('\n').filter((el) => el !== '');
    const obj = {};
    for (let i = 0; i < arr.length; i += 2) {
      obj[arr[i]] = arr[i + 1];
    }

    return obj;
  }

  async game(viewQuestions) {
    let obj = viewQuestions;
    let score = 0;
    for (let key in obj) {
      let question = rl.question(chalk.bold.blue(`
       ${key}
       –¢–≤–æ–π –æ—Ç–≤–µ—Ç: `));
      if (question === obj[key]) {
        score += 1;
        console.log(`\n       –¢–æ—á–Ω–æ ü§©`);
      } else {
        console.log(chalk.red('\n       –ê –≤–æ—Ç –∏ –Ω–µ—Ç: ') + obj[key]);
      }
    }
    console.log(`–¢–≤–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${chalk.cyan(score)}`);
  }

  async intro() {
    console.clear();
    const name = rl.question(chalk.magenta('                    –ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?\n'));
    console.clear();
    rl.question(`                     –ü–æ–∏–≥—Ä–∞–µ–º?, ${chalk.magenta(name)}`);
  }

  async outro() {
    setTimeout(() => {
      const model = new Model();
      const view = new View();
      const controller = new Controller(model, view);
      const again = rl.question(chalk.blue('      –ü–æ–≤—Ç–æ—Ä–∏–º? üîÅ'));
      if (again === '–¥–∞' || again === '–î–∞') {
        console.clear();
        controller.run();
      }
    }, 2000);
  }
}

// const readlineSync = require('readline-sync');

// class View {
//   renderSelectTopicPage(themes) {
//     // –Ω–∞–º –ø—Ä–∏—à—ë–ª —Å–ø–∏—Å–æ–∫ —Ç–µ–º, –Ω—É–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏ –∏—Ö –Ω–∞ —ç–∫—Ä–∞–Ω
//     // –∑–¥–µ—Å—å —Ç–≤–æ–π –∫–æ–¥...

//     // –∑–∞—Ç–µ–º –¥–∞—ë–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—ã–±—Ä–∞—Ç—å —Ç–µ–º—É
//     const topic = readlineSync.question('–í–≤–µ–¥–∏—Ç–µ —Ç–µ–º—É: ');

//     // –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—É –≤—ã–±—Ä–∞–Ω–Ω—É—é —Ç–µ–º—É
//     return topic;
//   }
// }

module.exports = View;
